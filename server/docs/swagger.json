{
  "openapi": "3.0.0",
  "info": {
    "title": "Todo API",
    "version": "1.0.0",
    "description": "API documentation for the Todo application"
  },
  "servers": [
    {
      "url": "http://localhost:5000"
    }
  ],
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": [
          "name",
          "email"
        ],
        "properties": {
          "user_id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          }
        }
      },
      "Team": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "team_id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Web Infra"
          }
        }
      },
      "Project": {
        "type": "object",
        "required": [
          "name",
          "team_id"
        ],
        "properties": {
          "project_id": {
            "type": "integer",
            "example": 1
          },
          "team_id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Web Development"
          }
        }
      },
      "Issue": {
        "type": "object",
        "required": [
          "title",
          "description"
        ],
        "properties": {
          "issue_id": {
            "type": "integer",
            "example": 1
          },
          "project_id": {
            "type": "integer",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "Bug in login system"
          },
          "description": {
            "type": "string",
            "example": "Users cannot log in with valid credentials."
          },
          "status": {
            "type": "string",
            "enum": [
              "Open",
              "In Progress",
              "Closed"
            ],
            "example": "Open"
          },
          "priority": {
            "type": "string",
            "enum": [
              "Low",
              "Medium",
              "High"
            ],
            "example": "Medium"
          },
          "reported_by": {
            "type": "integer",
            "example": 1
          },
          "assigned_to": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "Comment": {
        "type": "object",
        "required": [
          "content"
        ],
        "properties": {
          "comment_id": {
            "type": "integer",
            "example": 1
          },
          "issue_id": {
            "type": "integer",
            "example": 1
          },
          "content": {
            "type": "string",
            "example": "This was a hard bug to solve."
          },
          "author_id": {
            "type": "integer",
            "example": 1
          }
        }
      }
    }
  },
  "paths": {
    "/comments": {
      "get": {
        "summary": "Retrieve all comments",
        "tags": [
          "Comments"
        ],
        "responses": {
          "200": {
            "description": "A list of comments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Comment"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new comment",
        "tags": [
          "Comments"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Comment created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "summary": "Delete all comments",
        "tags": [
          "Comments"
        ],
        "responses": {
          "200": {
            "description": "All comments deleted successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/comments/{id}": {
      "get": {
        "summary": "Retrieve a single comment by ID",
        "tags": [
          "Comments"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "comment_id",
            "required": true,
            "description": "Numeric ID of the comment to retrieve",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single comment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "404": {
            "description": "Comment not found"
          }
        }
      },
      "patch": {
        "summary": "Update an existing comment",
        "tags": [
          "Comments"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "comment_id",
            "required": true,
            "description": "Numeric ID of the comment to update",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Comment updated successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Comment not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a comment by ID",
        "tags": [
          "Comments"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "comment_id",
            "required": true,
            "description": "Numeric ID of the comment to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comment deleted successfully"
          },
          "404": {
            "description": "Comment not found"
          }
        }
      }
    },
    "/issues": {
      "get": {
        "summary": "Retrieve all issues",
        "tags": [
          "Issues"
        ],
        "responses": {
          "200": {
            "description": "A list of issues",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Issue"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new issue",
        "tags": [
          "Issues"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Issue"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Issue created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "summary": "Delete all issues",
        "tags": [
          "Issues"
        ],
        "responses": {
          "200": {
            "description": "All issues deleted successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/issues/{id}": {
      "get": {
        "summary": "Retrieve a single issue by ID",
        "tags": [
          "Issues"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "issue_id",
            "required": true,
            "description": "Numeric ID of the issue to retrieve",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Issue"
                }
              }
            }
          },
          "404": {
            "description": "Issue not found"
          }
        }
      },
      "patch": {
        "summary": "Update an existing issue",
        "tags": [
          "Issues"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "issue_id",
            "required": true,
            "description": "Numeric ID of the issue to update",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Issue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Issue updated successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Issue not found"
          }
        }
      },
      "delete": {
        "summary": "Delete an issue by ID",
        "tags": [
          "Issues"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "issue_id",
            "required": true,
            "description": "Numeric ID of the issue to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Issue deleted successfully"
          },
          "404": {
            "description": "Issue not found"
          }
        }
      }
    },
    "/projects": {
      "get": {
        "summary": "Retrieve all projects",
        "tags": [
          "Projects"
        ],
        "responses": {
          "200": {
            "description": "A list of projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new project",
        "tags": [
          "Projects"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "summary": "Delete all projects",
        "tags": [
          "Projects"
        ],
        "responses": {
          "200": {
            "description": "All projects deleted successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/projects/{id}": {
      "get": {
        "summary": "Retrieve a single project by ID",
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project_id",
            "required": true,
            "description": "Numeric ID of the project to retrieve",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "404": {
            "description": "Project not found"
          }
        }
      },
      "patch": {
        "summary": "Update an existing project",
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project_id",
            "required": true,
            "description": "Numeric ID of the project to update",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project updated successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Project not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a project by ID",
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project_id",
            "required": true,
            "description": "Numeric ID of the project to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project deleted successfully"
          },
          "404": {
            "description": "Project not found"
          }
        }
      }
    },
    "/teams": {
      "get": {
        "summary": "Retrieve all teams",
        "tags": [
          "Teams"
        ],
        "responses": {
          "200": {
            "description": "A list of teams",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new team",
        "tags": [
          "Teams"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Team created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "summary": "Delete all teams",
        "tags": [
          "Teams"
        ],
        "responses": {
          "200": {
            "description": "All teams deleted successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/teams/{id}": {
      "get": {
        "summary": "Retrieve a single team by ID",
        "tags": [
          "Teams"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "team_id",
            "required": true,
            "description": "Numeric ID of the team to retrieve",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single team",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "404": {
            "description": "Team not found"
          }
        }
      },
      "patch": {
        "summary": "Update an existing team",
        "tags": [
          "Teams"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "team_id",
            "required": true,
            "description": "Numeric ID of the team to update",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Team updated successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Team not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a team by ID",
        "tags": [
          "Teams"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "team_id",
            "required": true,
            "description": "Numeric ID of the team to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Team deleted successfully"
          },
          "404": {
            "description": "Team not found"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Retrieve all users",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "summary": "Delete all users",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "All users deleted successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Retrieve a single user by ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "description": "Numeric ID of the user to retrieve",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "patch": {
        "summary": "Update an existing user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "description": "Numeric ID of the user to update",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a user by ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "description": "Numeric ID of the user to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Comments",
      "description": "API endpoints for managing comments"
    },
    {
      "name": "Issues",
      "description": "API endpoints for managing issues"
    },
    {
      "name": "Projects",
      "description": "API endpoints for managing projects"
    },
    {
      "name": "Teams",
      "description": "API endpoints for managing teams"
    },
    {
      "name": "Users",
      "description": "API endpoints for managing users"
    }
  ]
}